{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.html","./src/app/app.component.scss","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/resume.service.ts","./src/app/resume.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \" \\n<!-- <button type=\\\"button\\\" (click)=\\\"generatePdf()\\\">\\n  open pdf\\n</button> -->\\n\\n<nav class=\\\"navbar navbar-brand navbar-light by-primary d-flex justify-content-between\\\">\\n  <div class=\\\"navbar-brand mb-0 h1 text-whilte\\\">\\n    ONLINE RESUME BUILDER\\n  </div>\\n</nav>\\n\\n<div class=\\\"container-fluid\\\">\\n  <form #resumeForm=\\\"ngForm\\\" (ngSubmit)=\\\"resumeForm.valid\\\" novalidate> \\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-8\\\">\\n        <div class=\\\"shadow-sm card\\\">\\n          <div class=\\\"card-body\\\">\\n            <h4 class=\\\"card-title d-flex align-items-center\\\">\\n              <i class=\\\"material-icons\\\">\\n                account_circle\\n              </i>\\n              Personal Details\\n            </h4>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-6\\\">\\n                <div class=\\\"form-group\\\">\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"resume.name\\\" name=\\\"txtName\\\" placeholder=\\\"Your Name\\\"\\n                  #txtName=\\\"ngModel\\\" required>\\n                  <div class=\\\"text-danger\\\" *ngIf=\\\"lib.isCtrlValid (txtName, resumeForm)\\\">\\n                    <span *ngIf=\\\"txtName.errors['required']\\\">\\n                      Name is required.\\n                    </span>\\n                  </div>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <textarea class=\\\"form-control\\\" [(ngModel)]=\\\"resume.address\\\" name=\\\"txtAddress\\\" rows=\\\"3\\\"\\n                    #txtAddress=\\\"ngModel\\\" placeholder=\\\"Address\\\" required></textarea>\\n                   </div>\\n                </div>\\n              </div>\\n              <div class=\\\"col-md-6\\\">\\n                <div class=\\\"form-group\\\">\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"txtPhone\\\" [(ngModel)]=\\\"resume.contactNo\\\" \\n                  placeholder=\\\"Contact No.\\\" #txtPhone=ngModel pattern=\\\"[0-9]{10}\\\" required>\\n                   <div class=\\\"text-danger\\\" *ngIf=\\\"lib.isCtrlValid (txtPhone, resumeForm)\\\">\\n                    <span *ngIf=\\\"txtPhone.hasError('required')\\\">\\n                      Contact No. is required.\\n                    </span>\\n                    <span *ngIf=\\\"txtPhone.hasError('pattern')\\\">\\n                      Contact No. should be in 10 digits.\\n                    </span>\\n                  </div>\\n                </div>\\n                <div class=\\\"form-group\\\" >\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"txtEmail\\\" [(ngModel)]=\\\"resume.email\\\"\\n                  placeholder=\\\"Email id\\\" #txtEmail=ngModel required>\\n                  <div class=\\\"text-danger\\\" *ngIf=\\\"lib.isCtrlValid (txtEmail, resumeForm)\\\">\\n                    <span *ngIf=\\\"txtEmail.errors['required']\\\">\\n                      Email is required.\\n                    </span>\\n                  </div>\\n                </div> \\n                <div class=\\\"form-group\\\">\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"txtSprofile\\\" [(ngModel)]=\\\"resume.socialProfile\\\"\\n                  placeholder=\\\"Social Profile\\\" #txtSprofile=ngModel required>\\n                  <div class=\\\"text-danger\\\" *ngIf=\\\"lib.isCtrlValid (txtSprofile, resumeForm)\\\">\\n                    <span *ngIf=\\\"txtSprofile.errors['required']\\\">\\n                      Social Profile is required.\\n                    </span>\\n                  </div>\\n                </div> \\n              </div>\\n          </div>\\n        </div>\\n      </div>\\n<!-- Skills -->\\n      <div class=\\\"shadow-sm card\\\">\\n        <div class=\\\"card-body\\\">\\n          <div class=\\\"d-flex justify-content-between card-title\\\">\\n            <h4 class=\\\"d-flex align-items-center\\\">\\n              <i class=\\\"material-icons\\\">\\n                timeline\\n              </i>\\n              Skills\\n            </h4>\\n            <button class=\\\"btn btn-primary\\\" (click)=\\\"addSkill()\\\">+</button>\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-4\\\" *ngFor=\\\"let s of resume.skills;let i=index\\\">\\n              <div class=\\\"form-group\\\">\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"skill{{i}}\\\" [(ngModel)]=\\\"s.value\\\"\\n                placeholder=\\\"e.g. Java / Angular / .Net \\\" #Skil=\\\"ngModel\\\" required\\n                >\\n                <div class=\\\"text-danger\\\" *ngIf=\\\"lib.isCtrlValid (Skil, resumeForm)\\\">\\n                  <span *ngIf=\\\"Skil.errors['required']\\\">\\n                    Skil required.\\n                  </span>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n\\n      <!-- Experience -->\\n      <div class=\\\"shadow-sm card\\\">\\n        <div class=\\\"card-body\\\">\\n          <div class=\\\"d-flex justify-content-between card-title\\\">\\n            <h4 class=\\\"d-flex align-items-center\\\">\\n              <i class=\\\"material-icons\\\">\\n                timeline\\n              </i>\\n              Experience\\n            </h4>\\n            <button class=\\\"btn btn-primary\\\" (click)=\\\"addExperience()\\\">+</button>\\n          </div>\\n          <div class=\\\"row\\\" *ngFor=\\\"let ex of resume.experiences;let i=index\\\">\\n            <div class=\\\"col-md-6\\\">\\n              <div class=\\\"form-group\\\">\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"employer{{i}}\\\"\\n                [(ngModel)]=\\\"ex.employer\\\"\\n                placeholder=\\\"Employer\\\" #Employer=\\\"ngModel\\\" required>\\n                <div class=\\\"text-danger\\\" *ngIf=\\\"lib.isCtrlValid (Employer, resumeForm)\\\">\\n                  <span *ngIf=\\\"Employer.errors['required']\\\">\\n                    Employer required.\\n                  </span>\\n                </div>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <div class=\\\"form-group\\\">\\n                  <textarea class=\\\"form-control\\\" name=\\\"jobDescription{{i}}\\\" [(ngModel)]=\\\"ex.jobDescription\\\" rows=\\\"3\\\"\\n                      placeholder=\\\"Job Description\\\"></textarea>\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"col-md-6\\\">\\n              <div class=\\\"form-group\\\">\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"jobTitle{{i}}\\\"\\n                [(ngModel)]=\\\"ex.jobTitle\\\"\\n                placeholder=\\\"Job Title\\\" #JobTitle=\\\"ngModel\\\" required >\\n                <div class=\\\"text-danger\\\" *ngIf=\\\"lib.isCtrlValid (JobTitle, resumeForm)\\\">\\n                  <span *ngIf=\\\"JobTitle.errors['required']\\\">\\n                    Job Title is required.\\n                  </span>\\n                </div>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <input type=\\\"number\\\" class=\\\"form-control\\\" name=\\\"exInMonths{{i}}\\\" \\n                [(ngModel)]=\\\"ex.experience\\\" \\n                placeholder=\\\"Experience in months\\\" #Experience=\\\"ngModel\\\" required>\\n                <div class=\\\"text-danger\\\" *ngIf=\\\"lib.isCtrlValid (Experience, resumeForm)\\\">\\n                  <span *ngIf=\\\"Experience.errors['required']\\\">\\n                    Experience is required.\\n                  </span>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n\\n\\n      <!--Education  -->\\n      <div class=\\\"shadow-sm card\\\">\\n        <div class=\\\"card-body\\\">\\n          <div class=\\\"d-flex justify-content-between card-title\\\">\\n            <h4 class=\\\"d-flex align-items-center\\\">\\n              <i class=\\\"material-icons\\\">\\n                school\\n              </i>\\n              Education\\n            </h4>\\n            <button class=\\\"btn btn-primary\\\" (click)=\\\"addEducation()\\\">\\n              +\\n            </button>\\n          </div>\\n          <div class=\\\"row\\\" *ngFor=\\\"let ed of resume.educations;let i=index\\\">\\n            <div class=\\\"col-md-3\\\">\\n              <div class=\\\"form-group\\\">\\n                <select class=\\\"form-control\\\" placeholder=\\\"Degree\\\" name=\\\"degree{{i}}\\\"\\n                [(ngModel)]=\\\"ed.degree\\\" #Degree=\\\"ngModel\\\" required>\\n                <option [value]=\\\"d\\\" *ngFor=\\\"let d of degrees\\\">{{d}}</option>\\n              </select>\\n              <div *ngIf=\\\"resumeForm.submitted && Degree.errors\\\" class=\\\"text-error\\\">\\n                <div *ngIf=\\\"Degree.hasError('required')\\\">\\n                    Degree is required.\\n                </div>\\n            </div> \\n              </div>\\n            </div>\\n            <div class=\\\"col-md-3\\\">\\n              <div class=\\\"form-group\\\">\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"college{{i}}\\\"\\n                [(ngModel)]=\\\"ed.college\\\" placeholder=\\\"School/College\\\" \\n                #College=\\\"ngModel\\\" required>\\n                <div class=\\\"text-danger\\\" *ngIf=\\\"lib.isCtrlValid (College, resumeForm)\\\">\\n                  <span *ngIf=\\\"College.errors['required']\\\">\\n                    College is required.\\n                  </span>\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"col-md-3\\\">\\n              <div class=\\\"form-group\\\">\\n                <input type=\\\"number\\\" class=\\\"form-control\\\" name=\\\"passingYear{{i}}\\\"\\n                [(ngModel)]=\\\"ed.passingYear\\\"\\n                placeholder=\\\"Passing Year\\\" #PassingYear=\\\"ngModel\\\" required>\\n                <div class=\\\"text-danger\\\" *ngIf=\\\"lib.isCtrlValid (PassingYear, resumeForm)\\\">\\n                  <span *ngIf=\\\"PassingYear.errors['required']\\\">\\n                    Passing Year is required.\\n                  </span>\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"col-md-3\\\">\\n              <div class=\\\"form-group\\\">\\n                <input type=\\\"number\\\" class=\\\"form-control\\\" name=\\\"result{{i}}\\\"\\n                [(ngModel)]=\\\"ed.percentage\\\" placeholder=\\\"Percentage\\\" #Percentage=\\\"ngModel\\\" required>\\n                <div class=\\\"text-danger\\\" *ngIf=\\\"lib.isCtrlValid (Percentage, resumeForm)\\\">\\n                  <span *ngIf=\\\"Percentage.errors['required']\\\">\\n                    Percentage is required.\\n                  </span>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n\\n\\n      <!-- Other Details -->\\n\\n      <div class=\\\"shadow-sm card\\\">\\n        <div class=\\\"card-body\\\">\\n          <h4 class=\\\"card-title d-flex align-items-center\\\">\\n            <i class=\\\"material-icons\\\"> list </i>\\n            Other Details\\n          </h4>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-12\\\">\\n              <div class=\\\"form-group\\\">\\n                <textarea type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"resume.otherDetails\\\"\\n                name=\\\"otherDetails\\\" rows=\\\"4\\\"></textarea>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"col-md-4\\\">\\n      <div class=\\\"shadow-sm card action-buttons\\\">\\n        <button (click)=\\\"generatePdf('open')\\\"\\n        class=\\\"btn btn-primary d-flex align-items-center justify-content-center\\\">\\n        <i class=\\\"material-icons\\\">\\n          picture_as_pdf\\n        </i><span>Open PDF</span>\\n      </button>\\n      <button (click)=\\\"generatePdf('download')\\\"\\n      class=\\\"btn btn-primary d-flex align-items-center justify-content-center\\\">\\n          <i class=\\\"material-icons\\\">\\n            cloud_download\\n          </i><span>Download PDF</span>\\n      </button>\\n      <button (click)=\\\"generatePdf('print')\\\"\\n      class=\\\"btn btn-primary d-flex align-items-center justify-content-center\\\">\\n      <i class=\\\"material-icons\\\">\\n        print\\n      </i><span>Print PDF</span>\\n      </button>\\n\\n      <button type=\\\"reset\\\" (click)=\\\"resetForm()\\\"\\n      class=\\\"btn btn-primary d-flex align-items-center justify-content-center\\\">\\n        <i class=\\\"material-icons\\\">\\n          clear\\n        </i><span>Reset</span>\\n      </button>\\n      </div>\\n\\n      <div class=\\\"card p-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label class=\\\"h4 mb-3\\\" for=\\\"\\\">Show your picture in Resume</label>\\n            <input type=\\\"file\\\" class=\\\"form-control-file\\\" (change)=\\\"fileChanged($event)\\\"\\n            aria-describedby=\\\"fileHelpId\\\">\\n        </div>\\n        <img *ngIf=\\\"resume.profilePic\\\" [src]=\\\"resume.profilePic\\\" class=\\\"img-thumbnail\\\">\\n      </div>\\n    </div>\\n    </div>\\n  </form>\\n</div>\\n\\n\\n\\n\"","module.exports = \".row {\\n  padding: 10px;\\n}\\n\\n.card {\\n  margin: 10px;\\n}\\n\\n.material-icons {\\n  font-size: 30px;\\n}\\n\\nbutton span {\\n  font-size: 22px;\\n}\\n\\n.action-buttons button {\\n  margin: 5px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvSDpcXG5ld3RyeVxcb25saW5lLXJlc3VtZS1idWlsZGVyL3NyY1xcYXBwXFxhcHAuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGFBQUE7QUNDSjs7QURFQTtFQUNJLFlBQUE7QUNDSjs7QURFQTtFQUNJLGVBQUE7QUNDSjs7QURFQTtFQUNJLGVBQUE7QUNDSjs7QURFQTtFQUNJLFdBQUE7QUNDSiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5yb3cge1xyXG4gICAgcGFkZGluZzogMTBweDtcclxufVxyXG5cclxuLmNhcmQge1xyXG4gICAgbWFyZ2luOiAxMHB4O1xyXG59XHJcblxyXG4ubWF0ZXJpYWwtaWNvbnMge1xyXG4gICAgZm9udC1zaXplOiAzMHB4O1xyXG59XHJcblxyXG5idXR0b24gc3BhbiB7XHJcbiAgICBmb250LXNpemU6IDIycHg7XHJcbn1cclxuXHJcbi5hY3Rpb24tYnV0dG9ucyBidXR0b257XHJcbiAgICBtYXJnaW46IDVweDtcclxufSIsIi5yb3cge1xuICBwYWRkaW5nOiAxMHB4O1xufVxuXG4uY2FyZCB7XG4gIG1hcmdpbjogMTBweDtcbn1cblxuLm1hdGVyaWFsLWljb25zIHtcbiAgZm9udC1zaXplOiAzMHB4O1xufVxuXG5idXR0b24gc3BhbiB7XG4gIGZvbnQtc2l6ZTogMjJweDtcbn1cblxuLmFjdGlvbi1idXR0b25zIGJ1dHRvbiB7XG4gIG1hcmdpbjogNXB4O1xufSJdfQ== */\"","import { Component, ViewChild } from '@angular/core';\nimport pdfMake from 'pdfmake/build/pdfMake';\nimport pdfFonts from 'pdfmake/build/vfs_fonts';\npdfMake.vfs = pdfFonts.pdfMake.vfs;\n\nimport { Resume, Experience, Education, Skill } from './resume';\nimport { NgForm } from '@angular/forms';\nimport { ResumeService } from './resume.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  @ViewChild('resumeForm', { static: true }) resumeForm: NgForm;\n\n  // generatePdf(){\n  //   // console.log(\"hai\");   https://www.ngdevelop.tech/angular-8-export-to-pdf-using-pdfmake/\n  //   const documentDefinition  = {content :'This is pdf online builder' };\n  //   // pdfMake.createPdf(documentDefinition).open();// Open for pdf\n  //   // pdfMake.createPdf(documentDefinition).download();// Download for pdf\n  //   pdfMake.createPdf(documentDefinition).open({},window); // Open pdf in same window\n  //   pdfMake.createPdf(documentDefinition).print(); // Print pdf and download\n  // }\n\n  resume = new Resume();\n\n\n  degrees = ['S.S.L.C','H.S.C','B.E.','M.E.','B.Com','M.Com'];\n\n  constructor(public lib: ResumeService) {\n    this.resume = JSON.parse(sessionStorage.getItem('resume')) || new Resume();\n\n    if(!this.resume.experiences || this.resume.experiences.length===0) {\n      this.resume.experiences =[];\n      this.resume.experiences.push(new Experience());\n    }\n\n    if(!this.resume.educations || this.resume.educations.length ===0) {\n      this.resume.educations = [];\n      this.resume.educations.push(new Education());\n    }\n\n    if(!this.resume.skills || this.resume.skills.length === 0){\n      this.resume.skills = [];\n      this.resume.skills.push(new Skill());\n    }\n  }\n\n  addExperience(){\n    this.resume.experiences.push(new Experience());\n  }\n\n  addEducation(){\n    this.resume.educations.push(new Education());\n  }\n\n  generatePdf(action = 'open') {\n    const documentDefinition = this.getDocumentDefinition();\n\n    switch(action) {\n      case 'open': pdfMake.createPdf(documentDefinition).open();break;\n      case 'print': pdfMake.createPdf(documentDefinition).print();break;\n      case 'download': pdfMake.createPdf(documentDefinition).download();break;\n\n      default: pdfMake.createPdf(documentDefinition).open();break;\n    }\n  }\n\n  resetForm(){\n    this.resume = new Resume();\n  }\n\n  getDocumentDefinition(){\n    sessionStorage.setItem('resume',JSON.stringify(this.resume));\n\n    return {\n      // content : 'This is  a sample PDF'\n\n      content: [\n        {\n          text: 'RESUME',\n          bold: true,\n          fontSize: 20,\n          alignment: 'center',\n          margin: [0,0,0,20]\n        },\n        {\n          columns: [\n            [{\n              text: this.resume.name,\n              style: 'name'\n            },\n            {\n              text: this.resume.address\n            },\n            {\n              text: 'Email : ' + this.resume.email\n            },\n            {\n              text: 'Contact No : ' + this.resume.contactNo\n            },\n            {\n              text: 'Github: ' + this.resume.socialProfile,\n              link: this.resume.socialProfile,\n              color: 'blue'\n            }\n          ],\n          [\n            this.getProfilePicObject()\n          ]\n        ]\n        },\n        {\n          text : 'Skills',\n          style : 'header'\n        },\n        {\n          columns: [\n            {\n              ul : [\n                ...this.resume.skills.filter((value,index) => index % 3 ===0).map(s => s.value)\n              ]\n            },\n            {\n              ul : [\n                ...this.resume.skills.filter((value,index) => index % 3 ===1).map(s => s.value)\n              ] \n            },\n            {\n              ul : [\n                ...this.resume.skills.filter((value,index) => index % 3 ===2).map(s => s.value)\n              ]\n            }\n          ]\n        },\n        {\n          text: 'Experience',\n          style: 'header'\n        },\n        this.getExperienceObject(this.resume.experiences),\n\n        {\n          text: 'Education' ,\n          style: 'header'\n        },\n        this.getEducationObject(this.resume.educations),\n\n        {\n          text: 'Other Details',\n          style: 'header'\n        },\n        {\n          text: this.resume.otherDetails\n        },\n        {\n          text: 'Signature',\n          style: 'sign'\n        },\n        {\n          columns : [\n            { qr: this.resume.name + ', Contact No : ' + this.resume.contactNo, fit : 100 },\n            {\n              text: `(${this.resume.name})`,\n              alignment: 'right',\n            }\n          ]\n        }\n      ],\n      info: {\n        title: this.resume.name + '_RESUME',\n        author: this.resume.name,\n        subject: 'RESUME',\n        keywords: 'RESUME, ONLINE RESUME', \n      },\n        styles: {\n          header: {\n            fontSize: 18,\n            bold: true,\n            margin: [0, 20, 0, 10],\n            decoration: 'underline'\n          },\n          name: {\n            fontSize: 16,\n            bold: true\n          },\n          jobTitle: {\n            fontSize: 14,\n            bold: true,\n            italics: true\n          },\n          sign: {\n            margin: [0, 50, 0, 10],\n            alignment: 'right',\n            italics: true\n          },\n          tableHeader: {\n            bold: true\n          }\n        }\n    };\n  }\n\n  getExperienceObject(experiences: Experience[]){\n    const exs =[];\n    experiences.forEach(experience => {\n      exs.push(\n        [{\n          columns: [\n            [{\n              text: experience.jobTitle,\n              style: 'jobTitle'\n            },\n          {\n           text: experience.employer \n          },\n        {\n          text: experience.jobDescription\n        }],\n        {\n          text: 'Experience : ' + experience.experience + ' Months',\n          alignment: 'right'\n        }\n          ]\n        }]\n      );\n    });\n\n    return {\n      table: {\n        widths: ['*'],\n        body: [\n         ...exs\n        ]\n      }\n    }\n  }\n\n  getEducationObject(educations: Education[]) {\n    return {\n      table: {\n        widths: ['*','*','*','*'],\n        body: [\n          [{\n            text: 'Degree',\n            style: 'tableHeader'\n          },\n        {\n         text: 'College',\n         style: 'tableHeader' \n        },\n        {\n          text: 'Passing Year',\n          style: 'tableHeader'\n        },\n      {\n        text: 'Result',\n        style: 'tableHeader'\n      },\n    ],\n    ...educations.map(ed => {\n      return [ed.degree,ed.college,ed.passingYear,ed.percentage];\n    })\n        ]\n      }\n    };\n  }\n\n\n\n  getProfilePicObject(){\n    if(this.resume.ProfilePic) {\n      return {\n        image: this.resume.ProfilePic,\n        width: 75,\n        alignment : 'right'\n      };\n    }\n    return null;\n  }\n  \n  fileChanged(e){\n    const file =  e.target.files[0];\n    this.getBase64(file);\n  }\n\n  getBase64(file){\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = ()=>{\n      console.log(reader.result);\n      this.resume.ProfilePic = reader.result as string;      \n    };\n    reader.onerror = (err)=>{\n      console.log('Error',err);\n    };\n  }\n  \n  addSkill(){\n    this.resume.skills.push(new Skill());\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { AppComponent } from './app.component';\nimport { ResumeService } from './resume.service';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule\n  ],\n  providers: [ResumeService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { NgModel, NgForm } from '@angular/forms';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ResumeService {\n\n  constructor() { }\n\n  public isCtrlValid(Ctrl: NgModel, Form: NgForm) {\n    return Ctrl.errors && Form.submitted;\n  }\n}\n","export class Resume {\r\n    ProfilePic: string;\r\n    name: string;\r\n    address: string;\r\n    contactNo: number;\r\n    email:string;\r\n    socialProfile:string;\r\n    experiences:Experience[] =[];\r\n    educations: Education[] =[];\r\n    otherDetails: string;\r\n    skills: Skill[] =[];\r\n\r\n    constructor(){\r\n        this.experiences.push(new Experience());\r\n        this.educations.push(new Education());\r\n        this.skills.push(new Skill());\r\n    }\r\n}\r\n\r\nexport class Experience {\r\n    employer:string;\r\n    jobTitle:string;\r\n    jobDescription: string;\r\n    startDate:string;\r\n    experience:number;\r\n}\r\n\r\nexport class Education {\r\n    degree:string;\r\n    college:string;\r\n    passingYear:string;\r\n    percentage:number;\r\n}\r\n\r\n\r\nexport class Skill {\r\n    value: string;\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}